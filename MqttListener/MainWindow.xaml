<Window x:Class="MqttListener.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels ="clr-namespace:MqttListener.ViewModels"
        xmlns:views ="clr-namespace:MqttListener.Views"
        xmlns:converters="clr-namespace:MqttListener.Converters"
        xmlns:core="clr-namespace:MqttListener.Core"
        xmlns:local="clr-namespace:MqttListener"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        ui:WindowHelper.UseModernWindowStyle="True"
        mc:Ignorable="d"
        Title="MainWindow" Height="650" Width="900">
    <Window.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type viewModels:TreeViewModel}">
                <views:TreeView></views:TreeView>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:OpenConnectionDialogViewModel}">
                <views:OpenConnectionControlView></views:OpenConnectionControlView>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:ConnectDialogViewModel}">
                <views:ConnectDialogView></views:ConnectDialogView>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:TopicsViewModel}">
                <views:TopicsView></views:TopicsView>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:HistoryViewModel}">
                <views:HistoryView></views:HistoryView>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:ServerListViewModel}">
                <views:ServerListView></views:ServerListView>
            </DataTemplate>

            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"></converters:NullToVisibilityConverter>
            <converters:NullToVisibilityConverter IsInversed="True" x:Key="InversedNullToVisibilityConverter"></converters:NullToVisibilityConverter>
            <converters:BoolToVisibilityConverter IsInverted="True" x:Key="InvertedBoolToVisibilityConverter"></converters:BoolToVisibilityConverter>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></converters:BoolToVisibilityConverter>

            <converters:ViewTypeConverter x:Key="ViewTypeConverter"></converters:ViewTypeConverter>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <DockPanel LastChildFill="True">
            <StackPanel Orientation="Horizontal"
                        DockPanel.Dock="Top"
                        Margin="0 8">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type RadioButton}">
                        <Setter Property="Margin" Value="8 0"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                                                  IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>
                <RadioButton Content="Server List" 
                             IsChecked="{Binding SelectedView, Converter={StaticResource ViewTypeConverter}, ConverterParameter={x:Static core:ViewType.Server}}"/>
                <RadioButton Content="Tree View" 
                             IsChecked="{Binding SelectedView, Converter={StaticResource ViewTypeConverter}, ConverterParameter={x:Static core:ViewType.Tree}}"
                             IsEnabled="{Binding Listener.IsConnected}"/>
                <RadioButton Content="History View" 
                             IsChecked="{Binding SelectedView, Converter={StaticResource ViewTypeConverter}, ConverterParameter={x:Static core:ViewType.History}}"
                             IsEnabled="{Binding Listener.IsConnected}"/>
                <!--<RadioButton Content="Chart View" IsChecked="{Binding SelectedView, Converter={StaticResource ViewTypeConverter}, ConverterParameter={x:Static core:ViewType.Chart}}"/>-->
            </StackPanel>
            
            
            <ContentControl Content="{Binding View}" />
            
        </DockPanel>
        <Grid Visibility="{Binding DialogViewModel, Converter={StaticResource NullToVisibilityConverter}}"
              Background="#bb000000"
              MaxWidth="900"
              MaxHeight="800"
              d:IsHidden="True">
            <Border Margin="32"
                    BorderThickness="1"
                    BorderBrush="Black">
                <ContentControl Content="{Binding DialogViewModel}"></ContentControl>
            </Border>
        </Grid>
    </Grid>
</Window>